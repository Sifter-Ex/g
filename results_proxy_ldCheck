#################
#  GUI Results  #
#################
results(){
	resopt=$(zenity --title  "Choose Results to View" \
                        --height=600 --width=800 \
                        --file-selection --multiple);
    echo ${resopt} > file.tmp

    cat file.tmp | awk -F"[ | | ]" '{print $2}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $1}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $3}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $4}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $5}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $6}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $7}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $8}' >> log.tmp
    cat file.tmp | awk -F"[ | | ]" '{print $9}' >> log.tmp

    ####
    # Sort Files & Images from Selection
    ####
    for fileC in `cat log.tmp`
    do
        if file "${fileC}" | grep -qE 'image|bitmap'; then
		    ROPT="image"
            echo ${fileC} >> img.tmp
        else
            echo ${fileC} >> word.tmp
	    fi
    done
    rm log.tmp file.tmp
    sleep 3
    ####
    # Open Selected Files
    ####
    for FILE in `cat word.tmp`
    do
        zenity --notification --text="Opening Selected Files...."
        sleep 2
        zenity --title "${FILE}" \
           --height=800 --width=400 \
           --text-info --filename=${FILE}
    done
    sleep 3
    ####
    # Open Selected Images
    ####
    for IMG in `cat img.tmp`
    do
        zenity --notification --text="Opening Selected Images...."
        eom ${IMG}
    done
    rm img.tmp word.tmp
}


############################################################################################
############################################################################################

################
# Proxy Options
################
proxysystem(){
    ASTAT=$(cat /home/$USER/.anon_status)
    if [[ ${ASTAT} == "YES" ]]; then
        ENA="Anonsurf is currently: On"
        STOP="TRUE \"Stop\""
        START="FALSE \"Start\""
    else
        ENA="Anonsurf is currently: Off"
        STOP="FALSE \"Stop\""
        START="TRUE \"Start\""
    fi
    proxyO=$(zenity --list --title  "${ENA}" \
		--text "What would you like to do?" --radiolist  \
		--height=350 --width=500 \
		--column "Pick" --column "Catagory" ${START} ${STOP} FALSE "Back"); 
    echo ${proxyO}
    if [[ ${proxyO} == "Start" ]]; then
        sudo anonsurf start | tee >(${_zenity} --width=350 --height=500 \
  			--title="Starting AnonSurf" --progress \
			--pulsate --text="AnonSurf is starting to tunnel traffic through tor..." \
                        --auto-kill --auto-close \
                        --percentage=10) >${_out}

    	${_zenity} --width=350 --height=500  \
	           --title "AnonSurf StartUp Log" \
	           --text-info --filename="${_out}"
         echo "YES" > /home/$USER/.anon_status


    elif [[ ${proxyO} == "Stop" ]]; then
        sudo anonsurf stop | tee >(${_zenity} --width=350 --height=500 \
  		   --title="Stopping AnonSurf" --progress \
		   --pulsate --text="AnonSurf is sending traffic through the ClearWeb..." \
                   --auto-kill --auto-close \
                   --percentage=10) >${_out}
 
        ${_zenity} --width=350 --height=500  \
	         --title "AnonSurf ShutDown Log" \
	         --text-info --filename="${_out}"
          echo "NO" > /home/$USER/.anon_status
    else
        menu
    fi
}


###########################
# Add Target to Host.list #
###########################

ip_Q(){
    addT=$(${_zenity} --title  "Add Target to Host.list" \
	            --entry --text "Enter the IP or URL of your target")
    echo ${Tar}
    echo ${Tar} >> /opt/sifter/files/host_list.txt
    TQ=$(zenity --question --width 300 --text "Would you like to add another?"); echo $TQ
    if [[ ${TQ} == "0" ]]; then
        addT
    fi
}


############################
#  Sorting Live from Dead  #
############################

hostcheck(){
    for name in `cat files/host_list.txt`

    	    do
    	        xterm -e ping -c 1 $name
    	            if [[ $? == 0 ]]; then
    	                echo -e "${LP}======================================================"
    	                echo -e "${LP} ${name} Alive ${NC}" && echo ${name} >> files/pingtest_raw.pass
    	                echo -e "${LP}======================================================${NC}"
    	            else
    	                echo -e "${RED}====================================================="
    	                echo -e "${RED} ${name} Dead ${NC}" && echo ${name} >> files/pingtest_raw.fail
    	                echo -e "${RED}=====================================================${NC}"
    	            fi
    	    done
}


#############################
#  Live or Dead Host Check  #	Example Data
############################# 

check_hosts(){
    TARLIST=$(cat /opt/sifter/files/host_list.txt | grep "eg. target.com")
    if [[ ${TARLIST} == "eg. target.com" ]]; then
        rm /opt/sifter/files/host_list.txt
        kdialog --textinputbox "Please add an appropriate target first!" > /opt/sifter/files/host_list.txt
    fi
    if [[ -f 'files/pingtest_raw.pass' ]]; then
    	    rm files/pingtest_raw.pass
    fi
    if [[ -f 'files/pingtest.pass' ]]; then
        rm files/pingtest.pass
    fi
    if [[ -f 'files/pingtest_pass.txt' ]]; then
        rm files/pingtest_pass.txt
    fi

    hostcheck | tee >(zenity --width=200 --height=100 \
  				    --title="whois" --progress \
			        --pulsate --text="Searching domain info..." \
                    --auto-kill --auto-close \
                    --percentage=10) >${_out}

    zenity --width=220 --height=350  \
	     --title "Live Targets" \
	     --text-info --filename="/opt/sifter/files/pingtest_raw.pass"

    zenity --width=220 --height=350  \
	     --title "Dead Targets" \
	     --text-info --filename="/opt/sifter/files/pingtest_raw.fail"

}



#############################################################################################################################################
#############################################################################################################################################